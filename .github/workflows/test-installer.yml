name: Test Installer

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/install.sh'
      - 'docs/uninstall.sh'
      - '.github/workflows/test-installer.yml'
  pull_request:
    paths:
      - 'docs/install.sh'
      - 'docs/uninstall.sh'
      - '.github/workflows/test-installer.yml'

jobs:
  test-installer:
    name: Test Install Script
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        shell: [bash]
        # Note: zsh is not pre-installed on GitHub runners

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Test installer in fresh environment
      run: |
        # Create a temporary home directory
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME

        # Set installation directories
        export AUTO_UV_ENV_BIN_DIR="$HOME/.local/bin"
        export AUTO_UV_ENV_SHARE_DIR="$HOME/.local/share/auto-uv-env"

        echo "Testing installer with HOME=$HOME"

        # Create .bashrc for CI environment
        touch "$HOME/.bashrc"

        # Run the installer with -y flag to skip prompts
        bash ./docs/install.sh -y --verbose

        # Verify installation
        if [ ! -f "$HOME/.local/bin/auto-uv-env" ]; then
          echo "Error: auto-uv-env binary not installed"
          exit 1
        fi

        if [ ! -d "$HOME/.local/share/auto-uv-env" ]; then
          echo "Error: share directory not created"
          exit 1
        fi

        # Check shell integration
        # In CI, .bashrc might not exist initially, check both .bashrc and env file
        if [ -f "$HOME/.bashrc" ]; then
          if grep -q "auto-uv-env" "$HOME/.bashrc"; then
            echo "✓ Shell integration added to .bashrc"
          else
            echo "✗ Shell integration not in .bashrc"
          fi
        fi

        if [ -f "$HOME/.local/share/auto-uv-env/env" ]; then
          echo "✓ Environment file created"
        else
          echo "✗ Environment file not created"
          exit 1
        fi

        echo "Installation test passed!"

    - name: Test uninstaller
      run: |
        # Use the same test home
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME
        export AUTO_UV_ENV_BIN_DIR="$HOME/.local/bin"
        export AUTO_UV_ENV_SHARE_DIR="$HOME/.local/share/auto-uv-env"

        # Create .bashrc for CI
        touch "$HOME/.bashrc"

        # Install first
        bash ./docs/install.sh -y --quiet

        # Run uninstaller with -y flag
        bash ./docs/uninstall.sh -y

        # Verify removal
        if [ -f "$HOME/.local/bin/auto-uv-env" ]; then
          echo "Error: binary not removed"
          exit 1
        fi

        if [ -d "$HOME/.local/share/auto-uv-env" ]; then
          echo "Error: share directory not removed"
          exit 1
        fi

        echo "Uninstallation test passed!"

  test-macos-homebrew-detection:
    name: Test macOS Homebrew Detection
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Test Homebrew detection
      run: |
        # Test 1: The installer should detect Homebrew and suggest using it
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME

        # First test: Rejection of direct install (default behavior)
        printf 'n\n' | bash ./docs/install.sh > output.log 2>&1 || echo "Exit code: $?"

        # Debug: Show what was captured
        echo "=== Test 1: Rejection test output ==="
        cat output.log
        echo "=== End of output ==="

        if ! grep -q "Homebrew detected" output.log; then
          echo "Error: Installer did not detect Homebrew"
          exit 1
        fi

        if ! grep -q "brew tap ashwch/tap" output.log; then
          echo "Error: Installer did not suggest Homebrew installation"
          exit 1
        fi

        if ! grep -q "Installation cancelled" output.log; then
          echo "Error: Installer did not cancel when 'n' was provided"
          exit 1
        fi

        echo "✓ Homebrew detection test passed!"

        # Test 2: The installer should proceed with -y flag
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME
        mkdir -p "$HOME/.bashrc"
        touch "$HOME/.bashrc"

        bash ./docs/install.sh -y > output2.log 2>&1

        echo "=== Test 2: --yes flag test output ==="
        cat output2.log
        echo "=== End of output ==="

        if ! grep -q "Continuing with direct installation" output2.log; then
          echo "Error: Installer did not continue with --yes flag"
          exit 1
        fi

        if [ ! -f "$HOME/.local/bin/auto-uv-env" ]; then
          echo "Error: auto-uv-env was not installed with --yes flag"
          exit 1
        fi

        echo "✓ --yes flag test passed!"

  test-installation-paths:
    name: Test Custom Installation Paths
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Test custom paths
      run: |
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME

        # Test with custom paths
        export AUTO_UV_ENV_BIN_DIR="$HOME/custom/bin"
        export AUTO_UV_ENV_SHARE_DIR="$HOME/custom/share"

        # Create .bashrc for CI
        touch "$HOME/.bashrc"

        bash ./docs/install.sh -y --verbose

        # Verify custom paths were used
        if [ ! -f "$HOME/custom/bin/auto-uv-env" ]; then
          echo "Error: Binary not installed to custom path"
          exit 1
        fi

        if [ ! -d "$HOME/custom/share" ]; then
          echo "Error: Share dir not created at custom path"
          exit 1
        fi

        echo "Custom path installation test passed!"
